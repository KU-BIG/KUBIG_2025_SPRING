# -*- coding: utf-8 -*-
"""종합코드.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c5RcWZGZ7xdI6hCdGw1LVqGv-IHcwDRr
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

from google.colab import drive
drive.mount('/content/drive')

!pip install tabulate
from tabulate import tabulate

# 한글 폰트 설정
!apt-get -qq install fonts-nanum*
import matplotlib.font_manager as fm
font_path = '/usr/share/fonts/truetype/nanum/NanumGothic.ttf'
fm.fontManager.addfont(font_path)
plt.rc('font', family='NanumGothic')

score = pd.read_excel("/content/drive/MyDrive/Colab Notebooks/KUBIG/25-1/Conference/최종_산업안정도.xlsx")
score

def industry_recommend():
    # 사용자 입력 받기
    age = input("본인의 연령대를 선택하세요 (1: 50세~54세 / 2: 55세~59세 / 3: 60세 이상): ")
    gender = input("본인의 성별을 선택하세요 (1: 남 / 2: 여): ")
    edu = input("본인의 최종학력을 선택하세요 (1: 중졸이하 / 2: 고졸 / 3: 전문대졸 / 4: 대졸이상): ")
    option = input("고용안정도와 재해안전성 각각에 부여할 가중치를 선택하세요 (1: 5:5 / 2: 3:7 / 3: 7:3): ")

    if age == '1':
      target_age = '50세~54세'
    elif age == '2':
      target_age = '55세~59세'
    elif age == '3':
      target_age = '60세 이상'

    if gender == '1':
      target_gender = '남'
    elif gender == '2':
      target_gender = '여'

    if edu == '1':
      target_edu = '중졸이하'
    elif edu == '2':
      target_edu = '고졸'
    elif edu == '3':
      target_edu = '전문대졸'
    elif edu == '4':
      target_edu = '대졸이상'

    if option == '1':
      target_option = '최종점수(5:5)'
    elif option == '2':
      target_option = '최종점수(3:7)'
    elif option == '3':
      target_option = '최종점수(7:3)'

    # 필터링
    target_df = score[
        (score['연령'] == target_age) &
        (score['성별'] == target_gender) &
        (score['학력'] == target_edu)
    ]

    # 산업 중분류별 상위 15개 출력
    top15 = target_df[['산업_중분류', target_option]].sort_values(by=target_option, ascending=False).head(15).reset_index(drop=True)
    print("\n📊 안전성이 높은 산업 중분류 상위 15개 추천:")
    print(tabulate(top15, headers='keys', tablefmt='psql'))

    # 히트맵용 데이터 만들기
    heatmap_df = target_df.groupby('산업_대분류')[target_option].mean()
    heatmap_df = heatmap_df.copy().sort_values(ascending=False).to_frame(name=target_option)

    # 히트맵 그리기
    plt.figure(figsize=(6, len(heatmap_df) * 0.4))
    sns.heatmap(
        heatmap_df,
        annot=True, cmap='coolwarm_r', fmt=".3f", linewidths=0.5, cbar=True
    )
    plt.title(f"{target_age} {target_gender}자 {target_edu} 노동자의 산업별 안정도", fontweight='bold')
    plt.ylabel("산업분류")
    plt.tight_layout()
    plt.show()

industry_recommend()

industry_recommend()